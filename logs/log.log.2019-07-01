2019-07-01 17:35:40  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 17:35:40  [main:146] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:40  [main:150] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:40  [main:151] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:40  [main:255] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:40  [main:345] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:433] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:450] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:465] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:488] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:489] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:489] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=21636&registry=multicast&timestamp=1561973740964, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:496] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:508] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1288] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1296] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1307] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1316] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1337] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1354] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1354] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [DubboMulticastRegistryReceiver:1354] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1355] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [main:1355] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:41  [DubboMulticastRegistryReceiver:1355] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:42  [main:2356] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:52  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 17:35:52  [main:124] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:52  [main:128] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:52  [main:128] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:52  [main:198] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:52  [main:211] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:52  [main:311] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [main:1110] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 17:35:53  [main:1112] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 17:35:53  [main:1123] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [main:1130] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [main:1136] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [main:1137] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [main:1137] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [DubboMulticastRegistryReceiver:12734] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [DubboMulticastRegistryReceiver:1137] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [main:1137] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [DubboMulticastRegistryReceiver:12735] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [DubboMulticastRegistryReceiver:12735] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [DubboMulticastRegistryReceiver:12735] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=21636&side=provider&timestamp=1561973740974 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:53  [DubboMulticastRegistryReceiver:1138] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [main:2138] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2142] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2142] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=16672&timestamp=1561973752510], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2143] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=16672&timestamp=1561973752510, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2143] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2143] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2143] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboMulticastRegistryReceiver:13740] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboMulticastRegistryReceiver:2143] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2143] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2144] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2144] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboMulticastRegistryReceiver:2144] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboMulticastRegistryReceiver:13741] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2144] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboMulticastRegistryReceiver:2144] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboMulticastRegistryReceiver:13741] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2144] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=16672&side=consumer&timestamp=1561973752481, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:35:54  [DubboShutdownHook:2145] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:23  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 17:38:23  [main:128] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:23  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:23  [main:134] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:203] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:273] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:342] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:353] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:364] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:377] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:377] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:378] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=27500&registry=multicast&timestamp=1561973904079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:380] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:394] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:1172] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:1180] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:1190] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:24  [main:1199] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [main:1219] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [main:1235] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [main:1236] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [DubboMulticastRegistryReceiver:1236] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [main:1236] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [main:1237] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:25  [DubboMulticastRegistryReceiver:1237] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:26  [main:2238] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:37  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 17:38:37  [main:126] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:37  [main:130] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:37  [main:130] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:37  [main:198] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:37  [main:213] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:308] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:1098] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 17:38:38  [main:1099] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 17:38:38  [main:1110] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:1117] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:1123] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:1124] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:1124] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [DubboMulticastRegistryReceiver:15110] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [DubboMulticastRegistryReceiver:1124] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [main:1124] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [DubboMulticastRegistryReceiver:15111] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [DubboMulticastRegistryReceiver:15111] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [DubboMulticastRegistryReceiver:15111] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=27500&side=provider&timestamp=1561973904090 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:38  [DubboMulticastRegistryReceiver:1125] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [main:2126] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2129] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2129] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=15048&timestamp=1561973918086], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2130] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=15048&timestamp=1561973918086, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2130] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2130] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2130] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboMulticastRegistryReceiver:16116] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboMulticastRegistryReceiver:2130] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2130] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2131] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2131] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboMulticastRegistryReceiver:2131] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboMulticastRegistryReceiver:16117] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2131] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2131] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboMulticastRegistryReceiver:16117] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboMulticastRegistryReceiver:2131] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15048&side=consumer&timestamp=1561973918059 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 17:38:39  [DubboShutdownHook:2132] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:07  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:17:07  [main:140] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:07  [main:144] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:07  [main:144] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:217] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:282] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:345] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:357] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:370] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:386] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:387] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:387] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=26356&registry=multicast&timestamp=1561976228145&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:394] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:08  [main:406] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1192] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1200] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1211] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1218] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1238] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1255] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1255] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [DubboMulticastRegistryReceiver:1256] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1256] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [main:1256] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:09  [DubboMulticastRegistryReceiver:1257] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:10  [main:2258] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:20  [main:1] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:17:20  [main:129] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:20  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:20  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:20  [main:203] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:222] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:323] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:1158] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:17:21  [main:1160] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:17:21  [main:1172] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:1179] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:1187] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:1187] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:1188] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [DubboMulticastRegistryReceiver:14125] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [DubboMulticastRegistryReceiver:1188] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [main:1188] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [DubboMulticastRegistryReceiver:14125] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [DubboMulticastRegistryReceiver:14126] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [DubboMulticastRegistryReceiver:14126] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=26356&side=provider&timestamp=1561976228153 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:21  [DubboMulticastRegistryReceiver:1188] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [main:2188] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2191] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2192] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=13212&timestamp=1561976241108&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2192] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=13212&timestamp=1561976241108&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2192] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2192] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2192] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboMulticastRegistryReceiver:2192] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboMulticastRegistryReceiver:15129] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2193] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2193] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2193] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboMulticastRegistryReceiver:2193] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboMulticastRegistryReceiver:15130] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2193] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboMulticastRegistryReceiver:15130] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2193] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboMulticastRegistryReceiver:2193] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13212&side=consumer&timestamp=1561976241079 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:17:22  [DubboShutdownHook:2194] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:18:44  [main:134] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:138] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:139] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:212] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:269] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:335] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:348] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:361] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:373] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:374] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:374] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=3844&registry=multicast&timestamp=1561976324667&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:381] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:44  [main:389] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1170] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1179] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1190] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1199] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1221] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1238] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1239] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [DubboMulticastRegistryReceiver:1239] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1240] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [main:1240] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:45  [DubboMulticastRegistryReceiver:1240] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:18:46  [main:2240] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=3844&side=provider&timestamp=1561976324677, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:19:03  [main:128] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:132] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:132] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:203] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:266] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:334] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:348] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:359] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:370] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:370] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:371] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=7368&registry=multicast&timestamp=1561976343689&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:377] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:03  [main:386] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1193] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1201] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1213] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1222] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1244] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1262] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1263] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [DubboMulticastRegistryReceiver:1263] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1263] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [main:1264] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:04  [DubboMulticastRegistryReceiver:1264] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:05  [main:2264] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:31  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:19:31  [main:119] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:31  [main:123] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:31  [main:123] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:31  [main:196] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:31  [main:209] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:31  [main:311] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [main:1122] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:19:32  [main:1124] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:19:32  [main:1135] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [main:1143] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [main:1149] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [main:1149] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [main:1150] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [DubboMulticastRegistryReceiver:29114] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [DubboMulticastRegistryReceiver:1150] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [main:1150] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [DubboMulticastRegistryReceiver:29115] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [DubboMulticastRegistryReceiver:29115] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [DubboMulticastRegistryReceiver:29115] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:32  [DubboMulticastRegistryReceiver:1151] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [main:2151] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2155] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=17400&timestamp=1561976371683&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2155] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=17400&timestamp=1561976371683&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2155] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2155] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2155] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboMulticastRegistryReceiver:30119] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboMulticastRegistryReceiver:2155] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboMulticastRegistryReceiver:2156] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboMulticastRegistryReceiver:30120] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboMulticastRegistryReceiver:2156] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboMulticastRegistryReceiver:30120] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=17400&side=consumer&timestamp=1561976371659, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:19:33  [DubboShutdownHook:2158] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:09  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:20:09  [main:133] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:09  [main:139] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:09  [main:139] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:09  [main:220] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:09  [main:236] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:09  [main:320] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [main:1121] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:20:10  [main:1122] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:20:10  [main:1133] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [main:1140] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [main:1146] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [main:1146] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [main:1147] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [DubboMulticastRegistryReceiver:67399] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [DubboMulticastRegistryReceiver:1147] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [main:1147] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [DubboMulticastRegistryReceiver:67400] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [DubboMulticastRegistryReceiver:67400] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [DubboMulticastRegistryReceiver:67400] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:10  [DubboMulticastRegistryReceiver:1147] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [main:2147] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2150] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2151] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=25516&timestamp=1561976409981&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2151] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=25516&timestamp=1561976409981&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2151] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2151] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2151] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboMulticastRegistryReceiver:68403] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboMulticastRegistryReceiver:2151] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboMulticastRegistryReceiver:2152] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboMulticastRegistryReceiver:68404] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboMulticastRegistryReceiver:68405] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboMulticastRegistryReceiver:2153] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25516&side=consumer&timestamp=1561976409961 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:11  [DubboShutdownHook:2154] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:25  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:20:25  [main:123] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:25  [main:126] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:25  [main:127] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:25  [main:192] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:25  [main:207] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:298] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:1087] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:20:26  [main:1088] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:20:26  [main:1099] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:1105] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:1111] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:1112] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:1112] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [DubboMulticastRegistryReceiver:83403] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [DubboMulticastRegistryReceiver:1112] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [main:1112] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [DubboMulticastRegistryReceiver:83404] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [DubboMulticastRegistryReceiver:83404] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [DubboMulticastRegistryReceiver:83404] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:26  [DubboMulticastRegistryReceiver:1113] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [main:2114] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2117] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2118] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=15184&timestamp=1561976425996&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2118] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=15184&timestamp=1561976425996&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2118] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2118] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2118] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboMulticastRegistryReceiver:2118] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboMulticastRegistryReceiver:84409] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2118] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2119] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2119] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboMulticastRegistryReceiver:2119] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboMulticastRegistryReceiver:84410] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2119] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2119] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboMulticastRegistryReceiver:84410] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboMulticastRegistryReceiver:2119] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=15184&side=consumer&timestamp=1561976425967 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:20:27  [DubboShutdownHook:2120] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:33  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:22:33  [main:127] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:33  [main:131] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:33  [main:131] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:33  [main:198] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:33  [main:213] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:33  [main:296] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [main:1104] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:22:34  [main:1106] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:22:34  [main:1117] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [main:1124] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [main:1130] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [main:1131] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [main:1131] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [DubboMulticastRegistryReceiver:211285] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [DubboMulticastRegistryReceiver:1131] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [main:1131] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [DubboMulticastRegistryReceiver:211286] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [DubboMulticastRegistryReceiver:211286] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [DubboMulticastRegistryReceiver:211286] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:34  [DubboMulticastRegistryReceiver:1132] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [main:2132] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2135] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2136] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=25712&timestamp=1561976553857&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2136] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=25712&timestamp=1561976553857&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2136] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2136] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2136] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboMulticastRegistryReceiver:2136] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboMulticastRegistryReceiver:212290] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2136] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2137] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2137] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboMulticastRegistryReceiver:2137] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboMulticastRegistryReceiver:212291] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2137] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboMulticastRegistryReceiver:2137] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboMulticastRegistryReceiver:212291] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2137] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=25712&side=consumer&timestamp=1561976553832, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:22:35  [DubboShutdownHook:2139] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:54  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:23:54  [main:128] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:54  [main:132] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:54  [main:132] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:54  [main:212] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:54  [main:233] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:54  [main:334] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [main:1130] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:23:55  [main:1131] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:23:55  [main:1142] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [main:1149] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [main:1156] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [main:1156] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [main:1156] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [DubboMulticastRegistryReceiver:292278] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [DubboMulticastRegistryReceiver:1156] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [main:1157] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [DubboMulticastRegistryReceiver:292279] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [DubboMulticastRegistryReceiver:292279] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [DubboMulticastRegistryReceiver:292279] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:55  [DubboMulticastRegistryReceiver:1157] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [main:2158] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2161] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2162] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=24000&timestamp=1561976634865&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2162] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=24000&timestamp=1561976634865&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2162] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2162] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2162] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboMulticastRegistryReceiver:2162] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboMulticastRegistryReceiver:293284] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2162] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2163] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2163] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboMulticastRegistryReceiver:293285] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboMulticastRegistryReceiver:2163] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2163] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2163] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboMulticastRegistryReceiver:293285] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboMulticastRegistryReceiver:2163] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=24000&side=consumer&timestamp=1561976634834 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:23:56  [DubboShutdownHook:2164] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:26  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:26:26  [main:126] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:26  [main:130] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:26  [main:130] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:26  [main:203] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:26  [main:219] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:26  [main:305] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [main:1093] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:26:27  [main:1095] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:26:27  [main:1105] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [main:1112] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [main:1119] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [main:1119] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [main:1120] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [DubboMulticastRegistryReceiver:1120] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [DubboMulticastRegistryReceiver:443910] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [main:1120] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [DubboMulticastRegistryReceiver:443910] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [DubboMulticastRegistryReceiver:443910] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [DubboMulticastRegistryReceiver:443910] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=7368&side=provider&timestamp=1561976343700 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:27  [DubboMulticastRegistryReceiver:1120] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [main:2120] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2123] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2124] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=5240&timestamp=1561976786501&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2124] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=5240&timestamp=1561976786501&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2124] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2124] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2124] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboMulticastRegistryReceiver:444914] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboMulticastRegistryReceiver:2124] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2125] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2125] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2125] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboMulticastRegistryReceiver:2125] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboMulticastRegistryReceiver:444915] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2125] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2126] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboMulticastRegistryReceiver:444916] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboMulticastRegistryReceiver:2126] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=5240&side=consumer&timestamp=1561976786474 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:28  [DubboShutdownHook:2127] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:36  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:26:36  [main:138] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:36  [main:142] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:36  [main:142] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:36  [main:221] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:292] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:353] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:364] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:376] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:390] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:390] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:390] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=9412&registry=multicast&timestamp=1561976797057&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:397] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:408] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:1213] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:1222] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:1234] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:37  [main:1243] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [main:1263] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [main:1279] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [main:1280] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [DubboMulticastRegistryReceiver:1280] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [main:1281] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [main:1281] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:38  [DubboMulticastRegistryReceiver:1281] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:26:39  [main:2281] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:01  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:27:01  [main:131] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:01  [main:135] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:01  [main:136] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:01  [main:212] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:01  [main:225] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:01  [main:316] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [main:1126] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:27:02  [main:1127] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:27:02  [main:1138] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [main:1145] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [main:1151] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [main:1151] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [main:1151] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [DubboMulticastRegistryReceiver:1151] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [DubboMulticastRegistryReceiver:26042] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [main:1151] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [DubboMulticastRegistryReceiver:26043] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [DubboMulticastRegistryReceiver:26043] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [DubboMulticastRegistryReceiver:26043] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=9412&side=provider&timestamp=1561976797067 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:02  [DubboMulticastRegistryReceiver:1152] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [main:2152] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2155] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=11608&timestamp=1561976821957&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=11608&timestamp=1561976821957&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2156] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2157] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboMulticastRegistryReceiver:27048] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboMulticastRegistryReceiver:2157] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2157] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2157] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2157] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboMulticastRegistryReceiver:2157] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboMulticastRegistryReceiver:27048] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2157] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2158] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboMulticastRegistryReceiver:27049] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboMulticastRegistryReceiver:2158] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=11608&side=consumer&timestamp=1561976821931 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:27:03  [DubboShutdownHook:2159] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:53  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:29:54  [main:133] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:137] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:137] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:213] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:282] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:351] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:363] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:376] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:387] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:387] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:388] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=20020&registry=multicast&timestamp=1561976994230&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:393] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:54  [main:403] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1224] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1234] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1245] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1255] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1278] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1298] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1298] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [DubboMulticastRegistryReceiver:1299] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1299] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [main:1300] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:55  [DubboMulticastRegistryReceiver:1300] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:29:56  [main:2300] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:09  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:30:09  [main:124] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:09  [main:128] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:09  [main:128] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:09  [main:197] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:09  [main:215] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:09  [main:310] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [main:1121] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:30:10  [main:1123] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:30:10  [main:1133] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [main:1139] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [main:1146] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [main:1146] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [main:1146] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [DubboMulticastRegistryReceiver:16402] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [DubboMulticastRegistryReceiver:1146] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [main:1146] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [DubboMulticastRegistryReceiver:16403] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [DubboMulticastRegistryReceiver:16403] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [DubboMulticastRegistryReceiver:16403] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=20020&side=provider&timestamp=1561976994239 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:10  [DubboMulticastRegistryReceiver:1147] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [main:2148] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=12760&timestamp=1561977009499&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=12760&timestamp=1561977009499&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboMulticastRegistryReceiver:2153] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboMulticastRegistryReceiver:17409] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboMulticastRegistryReceiver:2154] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboMulticastRegistryReceiver:17410] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboMulticastRegistryReceiver:2154] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboMulticastRegistryReceiver:17410] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=12760&side=consumer&timestamp=1561977009469, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:30:11  [DubboShutdownHook:2155] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:33:01  [main:160] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:165] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:166] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:247] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:318] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:393] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:408] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:421] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:437] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:438] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:438] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=16216&registry=multicast&timestamp=1561977181722&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:446] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:01  [main:457] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1250] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1259] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1271] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1281] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1301] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1318] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1318] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [DubboMulticastRegistryReceiver:1319] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1319] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [main:1319] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:02  [DubboMulticastRegistryReceiver:1320] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:03  [main:2321] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:15  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:33:16  [main:140] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:16  [main:145] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:16  [main:145] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:16  [main:227] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:16  [main:244] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:16  [main:341] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [main:1306] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:33:17  [main:1308] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:33:17  [main:1318] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [main:1326] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [main:1332] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [main:1332] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [main:1333] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [DubboMulticastRegistryReceiver:15872] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [DubboMulticastRegistryReceiver:1333] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [main:1333] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [DubboMulticastRegistryReceiver:15873] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [DubboMulticastRegistryReceiver:15873] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [DubboMulticastRegistryReceiver:15873] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:17  [DubboMulticastRegistryReceiver:1334] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [main:2335] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2338] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2339] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=9368&timestamp=1561977196269&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2339] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=9368&timestamp=1561977196269&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2339] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2339] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2340] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboMulticastRegistryReceiver:16879] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboMulticastRegistryReceiver:2340] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2340] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2340] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2340] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboMulticastRegistryReceiver:2340] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboMulticastRegistryReceiver:16879] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2340] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2341] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboMulticastRegistryReceiver:16880] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboMulticastRegistryReceiver:2341] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9368&side=consumer&timestamp=1561977196240 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:18  [DubboShutdownHook:2342] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:37  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:33:37  [main:151] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:37  [main:157] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:37  [main:158] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:37  [main:244] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:37  [main:262] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:37  [main:388] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [main:1396] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:33:38  [main:1398] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:33:38  [main:1408] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [main:1416] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [main:1424] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [main:1424] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [DubboMulticastRegistryReceiver:1425] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [DubboMulticastRegistryReceiver:37119] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [main:1425] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [main:1425] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [DubboMulticastRegistryReceiver:37120] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [DubboMulticastRegistryReceiver:37120] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [DubboMulticastRegistryReceiver:37121] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=16216&side=provider&timestamp=1561977181732 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:38  [DubboMulticastRegistryReceiver:1426] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [main:2427] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [main:2429] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&register.ip=169.254.72.48&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2438] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2438] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=13928&timestamp=1561977217469&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2438] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=13928&timestamp=1561977217469&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2438] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2439] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboMulticastRegistryReceiver:2439] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2439] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboMulticastRegistryReceiver:38133] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2439] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2439] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2439] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboMulticastRegistryReceiver:38134] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboMulticastRegistryReceiver:2440] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2440] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2440] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboMulticastRegistryReceiver:38134] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboMulticastRegistryReceiver:2440] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=13928&side=consumer&timestamp=1561977217445 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:33:39  [DubboShutdownHook:2441] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:34:23  [main:138] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:142] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:142] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:215] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:288] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:360] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:373] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:387] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:400] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:400] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:400] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to registry registry://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=17620&registry=multicast&timestamp=1561977263513&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:403] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:23  [main:418] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1230] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1240] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1252] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1265] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1297] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1320] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1321] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [DubboMulticastRegistryReceiver:1321] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1322] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [main:1323] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:24  [DubboMulticastRegistryReceiver:1323] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:2324] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:34:25  [main:128] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:132] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:132] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:202] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:219] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:25  [main:312] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [main:1111] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:34:26  [main:1113] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:34:26  [main:1123] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [main:1130] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [main:1137] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [main:1137] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [main:1138] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [DubboMulticastRegistryReceiver:3583] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [DubboMulticastRegistryReceiver:1138] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [main:1138] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [DubboMulticastRegistryReceiver:3583] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [DubboMulticastRegistryReceiver:3584] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [DubboMulticastRegistryReceiver:3584] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:26  [DubboMulticastRegistryReceiver:1138] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [main:2139] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [main:2144] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&register.ip=169.254.72.48&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2152] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Close all registries [multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=9812&timestamp=1561977265969&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Destroy registry:multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=9812&timestamp=1561977265969&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboMulticastRegistryReceiver:2153] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboMulticastRegistryReceiver:4598] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2153] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboMulticastRegistryReceiver:2154] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboMulticastRegistryReceiver:4599] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2154] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboMulticastRegistryReceiver:4599] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboMulticastRegistryReceiver:2154] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=9812&side=consumer&timestamp=1561977265943 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:34:27  [DubboShutdownHook:2155] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58401] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58401] - [INFO]   [DUBBO] Close all registries [multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=17620&timestamp=1561977263513&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58401] - [INFO]   [DUBBO] Destroy registry:multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=17620&timestamp=1561977263513&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58402] - [INFO]   [DUBBO] Unregister: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58402] - [INFO]   [DUBBO] Send broadcast message: unregister dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58402] - [INFO]   [DUBBO] Destroy unregister url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboMulticastRegistryReceiver:58402] - [INFO]   [DUBBO] Receive multicast message: unregister dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58402] - [INFO]   [DUBBO] Unsubscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58402] - [INFO]   [DUBBO] Unregister: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58403] - [INFO]   [DUBBO] Send broadcast message: unregister provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboMulticastRegistryReceiver:58403] - [INFO]   [DUBBO] Receive multicast message: unregister provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58403] - [INFO]   [DUBBO] Send broadcast message: unsubscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58403] - [INFO]   [DUBBO] Destroy unsubscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboMulticastRegistryReceiver:58403] - [INFO]   [DUBBO] Receive multicast message: unsubscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58404] - [INFO]   [DUBBO] Close dubbo server: /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58405] - [INFO]   [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58407] - [INFO]   [DUBBO] Unexport service: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58407] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:21  [DubboShutdownHook:58411] - [INFO]   [DUBBO] Unexport service: injvm://127.0.0.1/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17620&side=provider&timestamp=1561977263522, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:45  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:35:45  [main:151] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:45  [main:155] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:45  [main:155] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:231] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:298] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:367] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:380] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:390] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:402] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:402] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:403] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 to registry registry://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=24096&registry=multicast&timestamp=1561977346141&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:409] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:46  [main:419] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1200] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1209] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1220] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1230] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1251] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1269] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1269] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [DubboMulticastRegistryReceiver:1269] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1270] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [main:1270] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:47  [DubboMulticastRegistryReceiver:1270] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:35:48  [main:2271] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:05  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:36:05  [main:129] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:05  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:05  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:05  [main:209] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:05  [main:232] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:05  [main:350] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [main:1233] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:36:06  [main:1235] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:36:06  [main:1248] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [main:1260] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [main:1271] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [main:1272] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [DubboMulticastRegistryReceiver:1272] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [DubboMulticastRegistryReceiver:21061] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [main:1272] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [main:1273] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [DubboMulticastRegistryReceiver:21063] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [DubboMulticastRegistryReceiver:21064] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [DubboMulticastRegistryReceiver:21064] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=24096&side=provider&timestamp=1561977346150 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:06  [DubboMulticastRegistryReceiver:1274] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [main:2275] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [main:2277] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&register.ip=169.254.72.48&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2285] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2285] - [INFO]   [DUBBO] Close all registries [multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=7184&timestamp=1561977365965&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2285] - [INFO]   [DUBBO] Destroy registry:multicast://224.1.2.3:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=7184&timestamp=1561977365965&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2286] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2286] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboMulticastRegistryReceiver:2286] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2286] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboMulticastRegistryReceiver:22075] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2286] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2286] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2287] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboMulticastRegistryReceiver:2287] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboMulticastRegistryReceiver:22076] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2287] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 to /224.1.2.3:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2287] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboMulticastRegistryReceiver:22076] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboMulticastRegistryReceiver:2287] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=7184&side=consumer&timestamp=1561977365938 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:36:07  [DubboShutdownHook:2288] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:37:34  [main:141] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [main:145] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [main:145] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [main:224] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [main:295] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [DubboShutdownHook:339] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:37:34  [DubboShutdownHook:340] - [INFO]   [DUBBO] Close all registries [], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:56  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:40:57  [main:130] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:134] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:135] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:205] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:273] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:348] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:363] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:375] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:386] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:386] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:387] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 to registry registry://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=hello-world-app&dubbo=2.0.2&pid=19540&registry=multicast&timestamp=1561977657259&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:392] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:57  [main:402] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1209] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1217] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1228] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1237] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1257] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1274] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1274] - [INFO]   [DUBBO] Send broadcast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [DubboMulticastRegistryReceiver:1275] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1275] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [main:1276] - [INFO]   [DUBBO] Send broadcast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:58  [DubboMulticastRegistryReceiver:1276] - [INFO]   [DUBBO] Receive multicast message: subscribe provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:40:59  [main:2276] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:06  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:41:06  [main:129] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:06  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:06  [main:133] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:06  [main:202] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:06  [main:218] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:335] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:1163] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:41:07  [main:1164] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 18:41:07  [main:1175] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:1182] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:1189] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:1189] - [INFO]   [DUBBO] Send broadcast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [DubboMulticastRegistryReceiver:10902] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:1189] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [DubboMulticastRegistryReceiver:1189] - [INFO]   [DUBBO] Receive multicast message: register consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [main:1190] - [INFO]   [DUBBO] Send broadcast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [DubboMulticastRegistryReceiver:10903] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [DubboMulticastRegistryReceiver:10904] - [INFO]   [DUBBO] Send unicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 to 10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [DubboMulticastRegistryReceiver:10904] - [INFO]   [DUBBO] Receive multicast message: register dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=hello-world-app&bean.name=com.self.study.api.DemoService&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=19540&side=provider&timestamp=1561977657268 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:07  [DubboMulticastRegistryReceiver:1190] - [INFO]   [DUBBO] Receive multicast message: subscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [main:2190] - [WARN]   [DUBBO] Ignore empty notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [main:2193] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&register.ip=169.254.72.48&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2205] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2205] - [INFO]   [DUBBO] Close all registries [multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=10936&timestamp=1561977667020&unicast=false], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2206] - [INFO]   [DUBBO] Destroy registry:multicast://224.5.6.7:1234/com.alibaba.dubbo.registry.RegistryService?application=consumer-of-helloworld-app&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=10936&timestamp=1561977667020&unicast=false, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2206] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2206] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2206] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboMulticastRegistryReceiver:2206] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboMulticastRegistryReceiver:11919] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=consumers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2206] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2207] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2207] - [INFO]   [DUBBO] Send broadcast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboMulticastRegistryReceiver:2207] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboMulticastRegistryReceiver:11920] - [INFO]   [DUBBO] Receive multicast message: unregister consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2207] - [INFO]   [DUBBO] Send broadcast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 to /224.5.6.7:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2207] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboMulticastRegistryReceiver:11920] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboMulticastRegistryReceiver:2207] - [INFO]   [DUBBO] Receive multicast message: unsubscribe consumer://169.254.72.48/com.self.study.api.DemoService?application=consumer-of-helloworld-app&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=10936&side=consumer&timestamp=1561977666997 from /10.14.1.105:1234, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:41:08  [DubboShutdownHook:2209] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:16  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 18:44:17  [main:126] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:130] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:130] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:202] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:218] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:341] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:703] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:17  [main:714] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [main:1191] - [INFO]   [DUBBO] Successed connect to server /169.254.72.48:20880 from NettyClient 169.254.72.48 using dubbo version 2.6.6, channel is NettyChannel [channel=[id: 0x1f1db2cb, L:/169.254.72.48:55446 - R:/169.254.72.48:20880]], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [main:1192] - [INFO]   [DUBBO] Start NettyClient DESKTOP-T5RQKO2/169.254.72.48 connect to the server /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [main:1206] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [main:1214] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [main:1221] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [main:1227] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url dubbo://127.0.0.1:20880/com.self.study.api.DemoService?application=consumer-of-helloworld-app&check=false&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=28104&register.ip=169.254.72.48&side=consumer&timestamp=1561977857243, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [DubboServerHandler-169.254.72.48:20880-thread-2:201370] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:44:18  [DubboClientHandler-127.0.0.1:20880-thread-1:1418] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:45:58  [dubbo-remoting-server-heartbeat-thread-1:301265] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:45:58  [NettyServerWorker-5-1:301267] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyServerWorker-5-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:45:58  [NettyClientWorker-1-1:101298] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:46:58  [dubbo-remoting-server-heartbeat-thread-1:361266] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:46:58  [NettyClientWorker-1-1:161297] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:46:58  [NettyServerWorker-5-1:361267] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyServerWorker-5-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:47:58  [dubbo-remoting-server-heartbeat-thread-1:421268] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:47:58  [NettyClientWorker-1-1:221300] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:47:58  [NettyServerWorker-5-1:421269] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyServerWorker-5-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:48:58  [dubbo-remoting-server-heartbeat-thread-1:481269] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:48:58  [NettyClientWorker-1-1:281300] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:48:58  [NettyServerWorker-5-1:481271] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyServerWorker-5-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:49:58  [dubbo-remoting-server-heartbeat-thread-1:541271] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:49:58  [NettyClientWorker-1-1:341302] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:49:58  [NettyServerWorker-5-1:541272] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyServerWorker-5-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:51:18  [dubbo-remoting-client-heartbeat-thread-1:421203] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:51:18  [NettyServerWorker-5-1:621173] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:51:18  [NettyClientWorker-1-1:421204] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:52:18  [dubbo-remoting-client-heartbeat-thread-1:481204] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:52:18  [NettyServerWorker-5-1:681173] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:52:18  [NettyClientWorker-1-1:481205] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:53:18  [dubbo-remoting-client-heartbeat-thread-1:541206] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:53:18  [NettyServerWorker-5-1:741176] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:53:18  [NettyClientWorker-1-1:541207] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:54:18  [dubbo-remoting-client-heartbeat-thread-1:601207] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:54:18  [NettyServerWorker-5-1:801176] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:54:18  [NettyClientWorker-1-1:601207] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:55:18  [dubbo-remoting-client-heartbeat-thread-1:661208] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:55:18  [NettyServerWorker-5-1:861177] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:55:18  [NettyClientWorker-1-1:661209] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:56:18  [dubbo-remoting-client-heartbeat-thread-1:721210] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:56:18  [NettyServerWorker-5-1:921179] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:56:18  [NettyClientWorker-1-1:721210] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:57:18  [dubbo-remoting-client-heartbeat-thread-1:781211] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:57:18  [NettyServerWorker-5-1:981180] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:57:18  [NettyClientWorker-1-1:781211] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:58:18  [dubbo-remoting-client-heartbeat-thread-1:841213] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:58:18  [NettyClientWorker-1-1:841213] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:58:18  [NettyServerWorker-5-1:1041182] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:59:18  [dubbo-remoting-client-heartbeat-thread-1:901214] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:59:18  [NettyServerWorker-5-1:1101183] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 18:59:18  [NettyClientWorker-1-1:901214] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:00:18  [dubbo-remoting-client-heartbeat-thread-1:961216] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:00:18  [NettyServerWorker-5-1:1161185] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:00:18  [NettyClientWorker-1-1:961216] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:01:18  [dubbo-remoting-client-heartbeat-thread-1:1021217] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:01:18  [NettyServerWorker-5-1:1221186] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:01:18  [NettyClientWorker-1-1:1021218] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:02:18  [dubbo-remoting-client-heartbeat-thread-1:1081219] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:02:18  [NettyServerWorker-5-1:1281188] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:02:18  [NettyClientWorker-1-1:1081220] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:03:18  [dubbo-remoting-client-heartbeat-thread-1:1141221] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:03:18  [NettyServerWorker-5-1:1341190] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:03:18  [NettyClientWorker-1-1:1141222] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:04:18  [dubbo-remoting-client-heartbeat-thread-1:1201222] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:04:18  [NettyServerWorker-5-1:1401191] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:04:18  [NettyClientWorker-1-1:1201222] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:05:18  [dubbo-remoting-client-heartbeat-thread-1:1261223] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:05:18  [NettyServerWorker-5-1:1461192] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:05:18  [NettyClientWorker-1-1:1261224] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:06:18  [dubbo-remoting-client-heartbeat-thread-1:1321225] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:06:18  [NettyServerWorker-5-1:1521194] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:06:18  [NettyClientWorker-1-1:1321225] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:07:18  [dubbo-remoting-client-heartbeat-thread-1:1381226] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:07:18  [NettyServerWorker-5-1:1581195] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:07:18  [NettyClientWorker-1-1:1381226] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:08:18  [dubbo-remoting-client-heartbeat-thread-1:1441227] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:08:18  [NettyServerWorker-5-1:1641196] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:08:18  [NettyClientWorker-1-1:1441228] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:09:18  [dubbo-remoting-client-heartbeat-thread-1:1501229] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:09:18  [NettyClientWorker-1-1:1501230] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:09:18  [NettyServerWorker-5-1:1701199] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:10:18  [dubbo-remoting-client-heartbeat-thread-1:1561230] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:10:18  [NettyServerWorker-5-1:1761199] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:10:18  [NettyClientWorker-1-1:1561231] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:11:18  [dubbo-remoting-client-heartbeat-thread-1:1621232] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:11:18  [NettyServerWorker-5-1:1821201] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:11:18  [NettyClientWorker-1-1:1621232] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:18  [dubbo-remoting-client-heartbeat-thread-1:1681233] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:18  [NettyServerWorker-5-1:1881202] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:18  [NettyClientWorker-1-1:1681233] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:12:38  [main:6] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:6] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:28] - [INFO]   [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : providers:dubbo:com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:28] - [INFO]   [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'provider': Generic bean: class [com.self.study.impl.services.Provider]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\works\Runner_VIV\VIV-BAAS\all\dubbo-test\target\classes\com\self\study\impl\services\Provider.class]] } were scanned under package[com.self.study.impl.services], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:198] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:201] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:202] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:267] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:313] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:359] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:369] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:376] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:384] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:384] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=1436&side=provider&timestamp=1561979558442, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:384] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=1436&side=provider&timestamp=1561979558442 to registry registry://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-provider&dubbo=2.0.2&pid=1436&registry=zookeeper&timestamp=1561979558436, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:388] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:396] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:855] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:12:38  [main:857] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:12:38  [main:867] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:38  [main:877] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:12:39  [main:888] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:18  [dubbo-remoting-client-heartbeat-thread-1:1741234] - [DEBUG]   [DUBBO] Send heartbeat to remote channel /169.254.72.48:20880, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:18  [NettyServerWorker-5-1:1941203] - [DEBUG]   [DUBBO] Received heartbeat from remote channel /169.254.72.48:55446, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:18  [NettyClientWorker-1-1:1741234] - [DEBUG]   [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:13:19  [main:6] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:6] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:28] - [INFO]   [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : providers:dubbo:com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:28] - [INFO]   [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'provider': Generic bean: class [com.self.study.impl.services.Provider]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\works\Runner_VIV\VIV-BAAS\all\dubbo-test\target\classes\com\self\study\impl\services\Provider.class]] } were scanned under package[com.self.study.impl.services], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:198] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:201] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:201] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:266] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:309] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:357] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:367] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:375] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:383] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:383] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17072&side=provider&timestamp=1561979599363, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:383] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17072&side=provider&timestamp=1561979599363 to registry registry://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-provider&dubbo=2.0.2&pid=17072&registry=zookeeper&timestamp=1561979599357, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:387] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:394] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:874] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:13:19  [main:875] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:13:19  [main:884] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:895] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:19  [main:906] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:27  [DubboShutdownHook:8004] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:27  [DubboShutdownHook:8004] - [INFO]   [DUBBO] Close all registries [], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:27  [DubboShutdownHook:8005] - [INFO]   [DUBBO] Unexport service: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17072&side=provider&timestamp=1561979599363, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:27  [DubboShutdownHook:8005] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:27  [DubboShutdownHook:8009] - [INFO]   [DUBBO] Unexport service: injvm://127.0.0.1/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=17072&side=provider&timestamp=1561979599363, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:13:36  [main:5] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:6] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:28] - [INFO]   [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : providers:dubbo:com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:28] - [INFO]   [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'provider': Generic bean: class [com.self.study.impl.services.Provider]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\works\Runner_VIV\VIV-BAAS\all\dubbo-test\target\classes\com\self\study\impl\services\Provider.class]] } were scanned under package[com.self.study.impl.services], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:208] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:212] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:212] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:288] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:341] - [INFO]   [DUBBO] The service ready on spring started. service: com.self.study.api.DemoService, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:394] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:405] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:413] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:423] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to local registry, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:423] - [INFO]   [DUBBO] Export dubbo service com.self.study.api.DemoService to url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:424] - [INFO]   [DUBBO] Register dubbo service com.self.study.api.DemoService url dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890 to registry registry://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-provider&dubbo=2.0.2&pid=6908&registry=zookeeper&timestamp=1561979616883, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:429] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:36  [main:439] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:37  [main:910] - [INFO]   [DUBBO] qos-server bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:37  [main:919] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:37  [main:929] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:37  [main:937] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:37  [main:957] - [INFO]   [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:37  [main:961] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10119] - [INFO]   [DUBBO] Register: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10266] - [INFO]   [DUBBO] Subscribe: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&category=configurators&check=false&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10279] - [INFO]   [DUBBO] Notify urls for subscribe url provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&category=configurators&check=false&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, urls: [empty://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&category=configurators&check=false&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10279] - [DEBUG]   [DUBBO] original override urls: [empty://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&category=configurators&check=false&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10279] - [DEBUG]   [DUBBO] subscribe url: provider://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&category=configurators&check=false&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, override urls: [empty://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&category=configurators&check=false&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10283] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:46  [main:10287] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:58  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:13:58  [main:11] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:58  [main:11] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:58  [main:15] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:58  [DubboShutdownHook:180] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:13:58  [DubboShutdownHook:181] - [INFO]   [DUBBO] Close all registries [], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:15:36  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:15:36  [main:10] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:15:36  [main:10] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:15:36  [main:14] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:15:36  [DubboShutdownHook:207] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:15:36  [DubboShutdownHook:208] - [INFO]   [DUBBO] Close all registries [], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:17:51  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:17:51  [main:10] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:17:51  [main:11] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:17:51  [main:14] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:17:51  [DubboShutdownHook:190] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:17:51  [DubboShutdownHook:191] - [INFO]   [DUBBO] Close all registries [], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:18:27  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:18:27  [main:11] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:18:27  [main:11] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:18:27  [main:15] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:19:28  [DubboShutdownHook:60571] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:19:28  [DubboShutdownHook:60573] - [INFO]   [DUBBO] Close all registries [], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:25:01  [main:10] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:11] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:12] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:150] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:154] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:154] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:236] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:248] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:01  [main:355] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:02  [main:1116] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:25:02  [main:1118] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:25:02  [main:1120] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:02  [main:1133] - [INFO]   [DUBBO] Load registry store file C:\Users\14467\.dubbo\dubbo-registry-annotation-consumer-127.0.0.1:2181.cache, data: {edu.dongnao.study.dubbo.DemoService=empty://192.168.48.1/edu.dongnao.study.dubbo.DemoService?application=annotation-consumer&category=configurators&default.timeout=3000&dubbo=2.0.2&interface=edu.dongnao.study.dubbo.DemoService&methods=sayHello&pid=16048&side=consumer&timestamp=1557792442226 empty://192.168.48.1/edu.dongnao.study.dubbo.DemoService?application=annotation-consumer&category=routers&default.timeout=3000&dubbo=2.0.2&interface=edu.dongnao.study.dubbo.DemoService&methods=sayHello&pid=16048&side=consumer&timestamp=1557792442226 dubbo://192.168.48.1:20880/edu.dongnao.study.dubbo.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:edu.dongnao.study.dubbo.DemoService&dubbo=2.0.2&generic=false&interface=edu.dongnao.study.dubbo.DemoService&methods=sayHello&pid=14228&side=provider&timestamp=1557792391057}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:11  [main:10230] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:11  [main:10236] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:25:11  [main:10241] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=26112&side=consumer&timestamp=1561980301450, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:26:05  [main:11] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:11] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:13] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:154] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:158] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:158] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:252] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:270] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:05  [main:376] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:06  [main:1128] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:26:06  [main:1130] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:26:06  [main:1132] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10253] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10259] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10264] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10621] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10701] - [INFO]   [DUBBO] Notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, urls: [dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, empty://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=configurators&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, empty://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10725] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10739] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10747] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10778] - [INFO]   [DUBBO] Successed connect to server /169.254.72.48:20880 from NettyClient 169.254.72.48 using dubbo version 2.6.6, channel is NettyChannel [channel=[id: 0x14a80162, L:/169.254.72.48:56847 - R:/169.254.72.48:20880]], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10778] - [INFO]   [DUBBO] Start NettyClient DESKTOP-T5RQKO2/169.254.72.48 connect to the server /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10816] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10824] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10829] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [main:10838] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url zookeeper://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=annotation-consumer&bean.name=providers:dubbo:com.self.study.api.DemoService&check=false&default.timeout=3000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&register.ip=169.254.72.48&remote.timestamp=1561979616890&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10864] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10864] - [INFO]   [DUBBO] Close all registries [zookeeper://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-consumer&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=18336&timestamp=1561980365457], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10864] - [INFO]   [DUBBO] Destroy registry:zookeeper://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-consumer&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=18336&timestamp=1561980365457, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10864] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10869] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10869] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10870] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10887] - [INFO]   [DUBBO] Close dubbo connect: /169.254.72.48:56847-->/169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10889] - [INFO]   [DUBBO] Close netty channel [id: 0x14a80162, L:/169.254.72.48:56847 - R:/169.254.72.48:20880], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10891] - [INFO]   [DUBBO] Close dubbo connect: 169.254.72.48:0-->169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10891] - [INFO]   [DUBBO] Destroy reference: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-consumer&bean.name=providers:dubbo:com.self.study.api.DemoService&check=false&default.timeout=3000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&register.ip=169.254.72.48&remote.timestamp=1561979616890&side=consumer&timestamp=1561980365427, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboShutdownHook:10891] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [NettyServerWorker-5-1:759457] - [WARN]   [DUBBO] All clients has discontected from 0.0.0.0/0.0.0.0:20880. You can graceful shutdown now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:26:15  [DubboServerHandler-169.254.72.48:20880-thread-2:759458] - [INFO]   [DUBBO] disconnected from /169.254.72.48:56847,url:dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&channel.readonly.sent=true&codec=dubbo&default.timeout=1000&dubbo=2.0.2&generic=false&heartbeat=60000&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:0] - [INFO]  using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2019-07-01 19:27:19  [main:10] - [INFO]   [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:11] - [INFO]   [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:13] - [WARN]   [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.self.study.impl.consumer], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:166] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:171] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, try to find an extension (bean) of type java.lang.String, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:171] - [WARN]   [DUBBO] No spring extension (bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:279] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:298] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:19  [main:430] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:20  [main:1188] - [ERROR]   [DUBBO] qos-server can not bind localhost:22222, dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:27:20  [main:1189] - [WARN]   [DUBBO] Fail to start qos server: , dubbo version: 2.6.6, current host: 169.254.72.48
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:130)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1358)
	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:501)
	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:486)
	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:1019)
	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:258)
	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:366)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:474)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2019-07-01 19:27:20  [main:1192] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:20  [main:1201] - [INFO]   [DUBBO] Load registry store file C:\Users\14467\.dubbo\dubbo-registry-annotation-consumer-127.0.0.1:2182.cache, data: {com.self.study.api.DemoService=empty://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=configurators&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427 empty://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=18336&side=consumer&timestamp=1561980365427 dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:29  [main:10298] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:29  [main:10304] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:29  [main:10311] - [INFO]   [DUBBO] Register: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10689] - [INFO]   [DUBBO] Subscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10698] - [INFO]   [DUBBO] Notify urls for subscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, urls: [dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&default.timeout=1000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, empty://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=configurators&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, empty://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10712] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10728] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10737] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10771] - [INFO]   [DUBBO] Successed connect to server /169.254.72.48:20880 from NettyClient 169.254.72.48 using dubbo version 2.6.6, channel is NettyChannel [channel=[id: 0x7d38cc78, L:/169.254.72.48:57009 - R:/169.254.72.48:20880]], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10771] - [INFO]   [DUBBO] Start NettyClient DESKTOP-T5RQKO2/169.254.72.48 connect to the server /169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10811] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10818] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10825] - [DEBUG]   [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [main:10834] - [INFO]   [DUBBO] Refer dubbo service com.self.study.api.DemoService from url zookeeper://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?anyhost=true&application=annotation-consumer&bean.name=providers:dubbo:com.self.study.api.DemoService&check=false&default.timeout=3000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&register.ip=169.254.72.48&remote.timestamp=1561979616890&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboServerHandler-169.254.72.48:20880-thread-4:833953] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboClientHandler-169.254.72.48:20880-thread-1:10956] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboServerHandler-169.254.72.48:20880-thread-5:833969] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboClientHandler-169.254.72.48:20880-thread-1:10959] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboServerHandler-169.254.72.48:20880-thread-6:833971] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboClientHandler-169.254.72.48:20880-thread-1:10961] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboServerHandler-169.254.72.48:20880-thread-7:833973] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboClientHandler-169.254.72.48:20880-thread-1:10962] - [DEBUG]   [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10963] - [INFO]   [DUBBO] Run shutdown hook now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10964] - [INFO]   [DUBBO] Close all registries [zookeeper://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-consumer&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=14936&timestamp=1561980439970], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10964] - [INFO]   [DUBBO] Destroy registry:zookeeper://127.0.0.1:2182/com.alibaba.dubbo.registry.RegistryService?application=annotation-consumer&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=14936&timestamp=1561980439970, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10964] - [INFO]   [DUBBO] Unregister: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10967] - [INFO]   [DUBBO] Destroy unregister url consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=consumers&check=false&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10967] - [INFO]   [DUBBO] Unsubscribe: consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10968] - [INFO]   [DUBBO] Destroy unsubscribe url consumer://169.254.72.48/com.self.study.api.DemoService?application=annotation-consumer&category=providers,configurators,routers&default.timeout=3000&dubbo=2.0.2&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10973] - [INFO]   [DUBBO] Close dubbo connect: /169.254.72.48:57009-->/169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10974] - [INFO]   [DUBBO] Close netty channel [id: 0x7d38cc78, L:/169.254.72.48:57009 - R:/169.254.72.48:20880], dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [NettyServerWorker-5-2:833985] - [WARN]   [DUBBO] All clients has discontected from /169.254.72.48:20880. You can graceful shutdown now., dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10975] - [INFO]   [DUBBO] Close dubbo connect: 169.254.72.48:0-->169.254.72.48:20880, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10975] - [INFO]   [DUBBO] Destroy reference: dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-consumer&bean.name=providers:dubbo:com.self.study.api.DemoService&check=false&default.timeout=3000&dubbo=2.0.2&generic=false&interface=com.self.study.api.DemoService&methods=sayHello&pid=14936&register.ip=169.254.72.48&remote.timestamp=1561979616890&side=consumer&timestamp=1561980439939, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboServerHandler-169.254.72.48:20880-thread-8:833986] - [INFO]   [DUBBO] disconnected from /169.254.72.48:57009,url:dubbo://169.254.72.48:20880/com.self.study.api.DemoService?anyhost=true&application=annotation-provider&bean.name=providers:dubbo:com.self.study.api.DemoService&bind.ip=169.254.72.48&bind.port=20880&channel.readonly.sent=true&codec=dubbo&default.timeout=1000&dubbo=2.0.2&generic=false&heartbeat=60000&interface=com.self.study.api.DemoService&methods=sayHello&pid=6908&side=provider&timestamp=1561979616890, dubbo version: 2.6.6, current host: 169.254.72.48
2019-07-01 19:27:30  [DubboShutdownHook:10975] - [INFO]   [DUBBO] qos-server stopped., dubbo version: 2.6.6, current host: 169.254.72.48
